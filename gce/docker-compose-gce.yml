# docker-compose-gce.yml
# Greenbone Community Edition Docker Compose
# Separato dal docker-compose principale per maggiore flessibilitÃ 

version: '3.8'

services:
  gce-postgres:
    image: postgres:16-alpine
    container_name: gce_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${GCE_POSTGRES_DB:-gvmd}
      POSTGRES_USER: ${GCE_POSTGRES_USER:-gce}
      POSTGRES_PASSWORD: ${GCE_POSTGRES_PASSWORD:-gce_password_123}
    volumes:
      - gce_postgres_data:/var/lib/postgresql/data
    networks:
      - gce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GCE_POSTGRES_USER:-gce}"]
      interval: 10s
      timeout: 5s
      retries: 5

  gce-redis:
    image: redis:7-alpine
    container_name: gce_redis
    restart: unless-stopped
    volumes:
      - gce_redis_data:/data
    networks:
      - gce_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  gce-gpg-data:
    image: registry.community.greenbone.net/community/gpg-data:stable
    container_name: gce_gpg_data
    volumes:
      - gce_gpg_data_vol:/mnt
    networks:
      - gce_network

  gce-notus-data:
    image: registry.community.greenbone.net/community/notus-data:latest
    container_name: gce_notus_data
    volumes:
      - gce_notus_data_vol:/mnt
    networks:
      - gce_network

  gce-vulnerability-tests:
    image: registry.community.greenbone.net/community/vulnerability-tests:latest
    container_name: gce_vulnerability_tests
    environment:
      STORAGE_PATH: /var/lib/openvas/22.04/vt-data/nasl
    volumes:
      - gce_vt_data_vol:/mnt
    networks:
      - gce_network

  gce-mqtt-broker:
    image: registry.community.greenbone.net/community/mqtt-broker:stable
    container_name: gce_mqtt_broker
    restart: unless-stopped
    ports:
      - "1883:1883"
    networks:
      - gce_network
    volumes:
      - gce_mqtt_broker_conf_vol:/etc/mosquitto

  gce-notus-scanner:
    image: registry.community.greenbone.net/community/notus-data:latest
    container_name: gce_notus_scanner
    restart: unless-stopped
    environment:
      NOTUS_SCANNER_MQTT_BROKER_ADDRESS: gce-mqtt-broker
      NOTUS_SCANNER_PRODUCTS_DIRECTORY: /var/lib/notus/products
    volumes:
      - gce_notus_data_vol:/var/lib/notus/products
      - gce_gpg_data_vol:/etc/openvas/gnupg
    depends_on:
      - gce-mqtt-broker
      - gce-gpg-data
      - gce-notus-data
    networks:
      - gce_network

  gce-gvmd:
    image: registry.community.greenbone.net/community/gvmd:stable
    container_name: gce_gvmd
    restart: unless-stopped
    environment:
      GVMD_POSTGRESQL_HOST: gce-postgres
      GVMD_POSTGRESQL_PORT: 5432
      GVMD_POSTGRESQL_NAME: ${GCE_POSTGRES_DB:-gvmd}
      GVMD_POSTGRESQL_USER: ${GCE_POSTGRES_USER:-gce}
      GVMD_POSTGRESQL_PASSWORD: ${GCE_POSTGRES_PASSWORD:-gce_password_123}
      # Admin user configuration
      GVMD_USER: ${GCE_ADMIN_USER:-admin}
      GVMD_PASSWORD: ${GCE_ADMIN_PASSWORD:-admin_password_123}
    volumes:
      - gce_gvmd_data_vol:/var/lib/gvm
      - gce_vt_data_vol:/var/lib/openvas/plugins
      - gce_notus_data_vol:/var/lib/notus
      - gce_gvmd_socket_vol:/run/gvmd
      - gce_ospd_openvas_socket_vol:/run/ospd
      - gce_gpg_data_vol:/etc/openvas/gnupg
    depends_on:
      gce-postgres:
        condition: service_healthy
      gce-gpg-data:
        condition: service_completed_successfully
      gce-vulnerability-tests:
        condition: service_completed_successfully
    networks:
      - gce_network

  gce-openvas:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    container_name: gce_openvas
    restart: unless-stopped
    environment:
      OSPD_OPENVAS_MQTT_BROKER_ADDRESS: gce-mqtt-broker
      OSPD_OPENVAS_NOTUS_FEED_DIR: /var/lib/notus/advisories
      OSPD_OPENVAS_DISABLE_NOTUS: ${GCE_DISABLE_NOTUS:-false}
    volumes:
      - gce_gpg_data_vol:/etc/openvas/gnupg
      - gce_vt_data_vol:/var/lib/openvas/plugins
      - gce_notus_data_vol:/var/lib/notus
      - gce_ospd_openvas_socket_vol:/run/ospd
      - gce_redis_socket_vol:/run/redis/
    depends_on:
      gce-redis:
        condition: service_healthy
      gce-gpg-data:
        condition: service_completed_successfully
      gce-vulnerability-tests:
        condition: service_completed_successfully
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - gce_network

  gce-ospd-openvas:
    image: registry.community.greenbone.net/community/ospd-openvas:stable
    container_name: gce_ospd_openvas
    restart: unless-stopped
    environment:
      OSPD_OPENVAS_MQTT_BROKER_ADDRESS: gce-mqtt-broker
      OSPD_OPENVAS_NOTUS_FEED_DIR: /var/lib/notus/advisories
      OSPD_OPENVAS_DISABLE_NOTUS: ${GCE_DISABLE_NOTUS:-false}
    volumes:
      - gce_gpg_data_vol:/etc/openvas/gnupg
      - gce_vt_data_vol:/var/lib/openvas/plugins
      - gce_notus_data_vol:/var/lib/notus
      - gce_ospd_openvas_socket_vol:/run/ospd
      - gce_redis_socket_vol:/run/redis/
    depends_on:
      gce-redis:
        condition: service_healthy
      gce-openvas:
        condition: service_started
    networks:
      - gce_network

  gce-gsa:
    image: registry.community.greenbone.net/community/gsa:latest
    container_name: gce_gsa
    restart: unless-stopped
    environment:
      GVMD_HOST: gce-gvmd
      GVMD_PORT: 9390
      # Cambiamo le porte per evitare conflitti futuri
      GSAD_ARGS: "--listen=0.0.0.0 --port=9392 --http-only"
    ports:
      # Web UI su porta alternativa per evitare conflitti con frontend Vapter
      - "${GCE_WEB_PORT:-8443}:9392"
    volumes:
      - gce_gvmd_socket_vol:/run/gvmd
    depends_on:
      - gce-gvmd
    networks:
      - gce_network

#  # Python API wrapper per semplificare l'integrazione con Vapter
#  gce-api:
#    image: registry.community.greenbone.net/community/python-gvm:stable
#    container_name: gce_api
#    restart: unless-stopped
#    environment:
#      GVM_HOST: gce-gvmd
#      GVM_PORT: 9390
#      GVM_USERNAME: ${GCE_ADMIN_USER:-admin}
#      GVM_PASSWORD: ${GCE_ADMIN_PASSWORD:-admin_password_123}
#    ports:
#      # API Python GVM
#      - "${GCE_API_PORT:-9390}:9390"
#    volumes:
#      - gce_gvmd_socket_vol:/run/gvmd
#    depends_on:
#      - gce-gvmd
#    networks:
#      - gce_network
#    command: >
#      sh -c "echo 'GCE API ready. Use Python GVM library to connect.' && tail -f /dev/null"

volumes:
  gce_postgres_data:
  gce_redis_data:
  gce_gpg_data_vol:
  gce_notus_data_vol:
  gce_vt_data_vol:
  gce_mqtt_broker_conf_vol:
  gce_gvmd_data_vol:
  gce_gvmd_socket_vol:
  gce_ospd_openvas_socket_vol:
  gce_redis_socket_vol:

networks:
  gce_network:
    driver: bridge
    # Facciamo in modo che possa comunicare con la rete di Vapter
    external: false
    name: gce_network